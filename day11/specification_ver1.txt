1.課題番号
Q2 (担当：森本TA)
*****************************************************************************************************************************
ISBNを与え、グループ記号と出版社記号を解読して表示するプログラムを作成せよ。                                                     
ISBN10, ISBN13のいずれかに対応すること、グループ記号は1桁のもの(日本など)が特定できること、
出版社記号は日本の主要出版社10社程度が特定できること、チェックディジットが適正でなければ無効コードと判定できること、を最低条件とする。
ISBN10/ISBN13両対応、2桁以上のグループ記号の特定、海外出版社の特定、などを実装すれば加点する。
例: 4797327928 → Japan, Softbank
*****************************************************************************************************************************

2.入力データの型・個数・値の範囲・書式，予想される不正入力とその対処方法，
　出力データの型・個数・値の範囲・書式
*****************************************************************************************************************************
「入力データ」
型：10桁または13桁の文字列（末尾のチェックディジットがXとなる場合がある．）
個数：1個
有効な値の範囲：0000000000～9999999999，9780000000000～978999999999X（接頭記号は978がメジャーなため，範囲を絞った）
書式：./parse_isbn 4797327928（プログラム名をparse_isbnとする）

「予想される不正入力とその対処方法」
10桁または13桁以外の桁数の数値列，または全角文字が混ざる，チェックディジット以外にアルファベット(X)が入る：エラーメッセージを表示
チェックディジットに'X'（半角大文字）が入力された場合，'x'（半角小文字）に変換して解析する．

「出力データ」
型：文字列
個数：1個
有効な値の範囲：最大50文字程度
書式：○○,_xxxx（○○は国名，_は空白，xxxxは出版社名）
*****************************************************************************************************************************

3.プログラム内部のデータ構造（詳しく）
*****************************************************************************************************************************
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define ISBN_LEN 13 //ISBNコードの最大文字列長
#define CODE_LEN 5 //記号の最大文字列長
#define NAME_LEN 20 //国名や出版社名の最大長
#define GROUP_LEN 100000 //グループ記号の最大数
#define ISBN10 0 //文字列長が10のとき
#define ISBN13 1 //文字列長が13のとき

typedef struct  {
    char code[CODE_LEN + 1]; //出版社記号
    char name[NAME_LEN + 1]; //出版社名
} pub_t;

typedef struct {
    int code; //グループ記号(0~99981)．配列の添え字と合わせる．（いらないかも）
    char name[NAME_LEN + 1]; //国名
    pub_t pubs[GROUP_LEN]; //国内における出版社情報をまとめた配列
} group_t;

group_t group[GROUP_LEN]; //存在するグループ記号と出版社名をあらかじめ初期化しておく．

char string[NAME_LEN + 1] //入力データを格納（末尾の'\0'を除いて最大13文字の文字列を入力できるが，10文字の可能性がある）
int type //ISBN-10かISBN-13かの情報を格納する．
*****************************************************************************************************************************

4.処理アルゴリズム（簡潔に）
*****************************************************************************************************************************
・main()関数において不適切な入力を検出し，エラーを表示する．
・末尾のxが大文字のときは小文字に変換して解析を進める．
・チェックディジットを算出する関数char solve_checkdigit(char str[], int type)を呼び出す．
・solve_checkdigit()は，第2引数にISBN-10かISBN-13かの情報を与えることで算出方法を変えて，それぞれ適したチェックディジットを文字として返す．
・ISBN-10のチェックディジットの算出方法は，チェックディジットを除いた左側の桁から10，9，8・・・2を掛けてそれらの和をとり，その和を11で割った余りを11から引き，さらにその差分を11で割った余りを求める．
・ISBN-13のチェックディジットの算出方法は，チェックディジットを除いた左側の桁から順に1，3，1，3・・・を掛けてそれらの和を取り，和を10で割って出た余りを10から引く．ただし，10で割った余りの下一桁が0の場合はチェック数字を0とする．
・いずれの場合でも，チェック数字が10となった場合は文字'x'を返す．
・これにより求まったチェックディジットと入力データのチェックディジットが等しいか比較し，等しくない場合は無効データとしてエラー表示する．
・ISBNのグループ記号と出版社記号を解析する関数void parse_isbn_to_print(char str[], int type)を呼び出し，あらかじめ格納しておいたグループ記号と出版社記号をまとめた配列と照らし合わせて，
全探索によりいずれかと適合すれば国名と出版社名を表示する．比較の際，文字列をatoi()関数などを用いて数値と比較できるよう変換する．
*****************************************************************************************************************************

5.コーディング，テスト，デバッグ用テストデータに関する構想を提出時点で考えられる範囲で書け．
　担当のTAや教員への相談事項があれば書いてよい（ただし簡潔に）．
*****************************************************************************************************************************
・グループ記号と出版社名の情報をまとめる際，配列をいっきに確保するとメモリを食うためポインタを用いて動的配列などにするとよいが，面倒くさいので静的配列にした．
・ISBNコードを解析する関数内で，if文を用いてISBN-10とISBN-13の解析方法を変える．
・変数名に関しては改名したほうが良いのもあるかもしれない．
・テストは，課題に提示された例（4797327928），ISBN-10コード，ISBN-13コード，桁数が不適切なコード，アルファベットが入る文字列，全角が入る文字列などを入力とする．
・デバッグはVScodeのデバッグ機能を用いたり，printf()関数などでコードの途中経過を観察する．
*****************************************************************************************************************************